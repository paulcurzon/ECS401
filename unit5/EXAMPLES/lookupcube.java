/* *****************************************AUTHOR Paul CurzonThis program demonstrates  - arrays. - lookup tables  Fill an array using a for loop as the result of a calculation  Lookup tables are data structures used to hold precomputed values  that can quickly be obtained   ******************************************** */import java.util.*;class lookupcube{    public static void main (String[] param)    {        int[] lookupTable; //create an unallocated array variable                lookupTable = createLookup();        useLookup(lookupTable);        System.exit(0);            } // END main              // first fill an array with the answer to a calculation for each value (cubing)      //    public static int[] createLookup()    {       int[] lookup = new int[10];       for(int i = 0; i<lookup.length; i++)       {           lookup[i] = i*i*i;       }                     return lookup;      // return the whole array     } // END createLookup       // get an answer quickly without calculating just looking it up       //    public static void useLookup(int [] lookup)    {       int query;       query = inputInt("Give me a number to cube quickly");              System.out.println(query + " cubed is " + lookup[query]);    } // END createLookup           // Input an integer    public static int inputInt(String message)    {       return Integer.parseInt(input(message));    } // END inputInt    // Input strings    public static String input(String message)    {       Scanner scanner = new Scanner(System.in);       String ans;       System.out.println(message);       ans = scanner.nextLine();          return ans;    } // END input} // END class lookupcube